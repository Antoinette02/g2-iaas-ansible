- name: check if mysql is initialized
  stat: path=/root/mysql_initialized_true
  ignore_errors: true
  register: mysql_initialized_true

- name: install mysql
  ansible.builtin.apt:
    update_cache: yes
    name:
      - mysql
      - python-pymysql
    state: present

- name: initialize mysql
  ansible.builtin.shell: "mysql-install-db --user=mysql --basedir=/usr --datadir=/var/lib/mysql"
  when: mysql_initialized_true.stat.exists == false

- name: ensure mysql is started and enabled at boot
  ansible.builtin.systemd:
    name: mysql
    state: started
    enabled: yes

- name: set root user password
  community.mysql.mysql_user:
    login_user: root
    login_unix_socket: "/run/mysqld/mysqld.sock"
    name: root
    password: "{{ mysql_root_password }}"
    host_all: yes
    state: present
  no_log: true
  when: mysql_initialized_true.stat.exists == false

- name: removes anonymous user account
  community.mysql.mysql_user:
    login_user: root
    login_password: "{{ mysql_root_password }}"
    name: ""
    host_all: yes
    state: absent
    login_unix_socket: "/run/mysqld/mysqld.sock"
  no_log: true
  when: mysql_initialized_true.stat.exists == false

# - name: set up databases
#   include_tasks: databases.yml

# - name: set up users
#   include_tasks: users.yml

# - name: backup script
#   ansible.builtin.copy:
#     src: files/mysql-dump-all-databases.sh
#     dest: /root/scripts/mysql-dump-all-databases.sh
#     owner: root
#     group: root
#     mode: '700'

# - name: add backup to crontab
#   ansible.builtin.cron:
#     name: mysql dump all databases
#     minute: "01"
#     hour: "3"
#     user: root
#     job: "/root/scripts/mysql-dump-all-databases.sh > /dev/null 2>&1"

- name: create mysql_initialized_true
  ansible.builtin.file:
    path: /root/mysql_initialized_true
    state: touch
  when: mysql_initialized_true.stat.exists == false

- name: set immutable attribute
  ansible.builtin.file:
    path: /root/mysql_initialized_true
    attributes: i
  when: mysql_initialized_true.stat.exists == false
